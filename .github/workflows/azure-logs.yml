name: Fetch Azure Logs

on:
  workflow_dispatch:

jobs:
  fetch-logs:
    runs-on: ubuntu-latest
    steps:
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Fetch Application Logs
      run: |
        echo "=== Fetching Frontend Application Logs ==="
        
        # Enable logging first
        az webapp log config \
          --name finagent-web-pps457j4wjrc6 \
          --resource-group finagent-rg \
          --application-logging filesystem \
          --level verbose || echo "Failed to enable logging"
        
        # Download logs
        echo ""
        echo "=== Downloading Recent Logs ==="
        az webapp log download \
          --name finagent-web-pps457j4wjrc6 \
          --resource-group finagent-rg \
          --log-file logs.zip || echo "Failed to download logs"
        
        # Extract and display
        if [ -f logs.zip ]; then
          unzip -q logs.zip
          echo "=== Application Logs ==="
          find . -name "*.txt" -o -name "*.log" | while read file; do
            echo "--- $file ---"
            tail -100 "$file" 2>/dev/null || cat "$file" 2>/dev/null
          done
        fi
        
        echo ""
        echo "=== Streaming Current Logs (30 seconds) ==="
        timeout 30 az webapp log tail \
          --name finagent-web-pps457j4wjrc6 \
          --resource-group finagent-rg || echo "Log streaming completed"
        
        echo ""
        echo "=== App Service Configuration ==="
        az webapp config show \
          --name finagent-web-pps457j4wjrc6 \
          --resource-group finagent-rg || echo "Failed to fetch config"
        
        echo ""
        echo "=== App Settings (redacted) ==="
        az webapp config appsettings list \
          --name finagent-web-pps457j4wjrc6 \
          --resource-group finagent-rg \
          --query "[].{name:name, value:value}" \
          --output table | sed 's/\(KEY.*\)[^ ]*/\1[REDACTED]/' || echo "Failed to fetch settings"